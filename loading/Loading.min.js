/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/**
 * Loading component intentionally written in legacy style since
 * we want the first load javascript (that renders first paint) to
 * be as light of a bundle as possible.
 */
(function () {

    /**
               * On first loaded it will create an overlay and start adding circles to it.
               * When we hear the "load" event - determining that all the resources are
               * fetched, we animate out the circles and remove the overlay
               */
    var SvgCircle = `
    <svg>
        <circle cx="50%" cy="50%" r="50%"></circle>
    </svg>
    `;

    function LoadingComponent() {

        var self = this;

        self.init = function () {
            self.element = document.createElement('div');
            self.element.classList.add('ah-loading');

            self.element.innerHTML = `
                <style>
                    .ah-loading svg{
                        width: 20px;
                        height: 20px;
                        margin-right: 20px;
                    }
                    .ah-loading circle{
                        fill: #f5faff;
                        opacity: 0.7;
                    }
                    .ah-loading .container{
                        background-color: #193754;
                        position: absolute;
                        top: 0;
                        bottom: 0;
                        left: 0;
                        right: 0;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                    }

                    .ah-loading.finished svg{
                        transition: transform 0.5s;
                        transform: translateY(-100px);
                    }
                </style>
                <div class="container"></div>
            `;

            self.state = {
                numCircles: 0 };


            // listen for terminating event
            window.addEventListener('load', _ => self._onFinishedLoading());

            // add itself to the DOM
            document.body.appendChild(this.element);
            self.container = self.element.querySelector('.container');

            // startup
            self._startTicking();
        },

        self._addCircle = function () {
            self.setState({ numCircles: self.state.numCircles + 1 });
        },

        self.setState = function (newState) {

            newState.getOwnPropertyNames().forEach(name => {
                this.state[name] = newState[name];
            });

            self.render();
        };

        self.render = function () {

            let circlesHTMLString = '';
            for (var i = self.state.numCircles; i > 0; i--) {
                circlesHTMLString += SvgCircle;
            }
            self.container.innerHTML = circlesHTMLString;
        };

        self._startTicking = function () {
            self._intervalId = setInterval(_ => {
                self._addCircle();
            }, 1000);
        };

        self._onFinishedLoading = function () {

            // stop the ticking
            clearInterval(self._intervalId);

            // animate out the circles
            self.element.classList.toggle('finished', true);

            setTimeout(_ => {
                self.element.style.display = 'none';
            }, 500);
        };

        self.init();
    }
    window.LoadingComponent = new LoadingComponent();
})();

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(0);
module.exports = __webpack_require__(2);


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Loading__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Loading___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Loading__);
// this imports the dropped file
// setup your component here...


// Set the custom element up programmatically.
// If you want to meddle with the HTML click that
// HTML Setup tab instead. 
const element = document.querySelector('ah-loading');

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,