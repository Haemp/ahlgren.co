@import "flexbox";


/* ---------------------------------- *
 * Layout module absolute% Solves the
 * problem of special positioning
 * ---------------------------------- */
%Abs-container{ position: relative; }
%Abs{ position:absolute; }
%Abs-bottom{ bottom:0; }
%Abs-top{ top:0; }
%Abs-right{ right:0; }
%Abs-left{ left:0; }


/* ----------------------------------- *
 * Specific 2 column based horizontal layout where the first
 * column is static and the following column fills out the 
 * rest of the space%
 * @usage
    <div class="InputFields">
      <div>
        <label>Input label</label>
        <input type="text">
      </div>
    </div>  
 * 
 * @param hsep-{px} Determines the horizontal gutter between the columns
 * @param vsep-{px} Determines the vertical gutter between the columns
 * ----------------------------------- */
%InputFields{
  &>*{ display: table-row;
    &>*{ vertical-align: middle;
      display: table-cell;
    }
    &>*:nth-child(2){
      width:100%;
    }
  }

  @for $i from 1 through 10{
    &%hsep-#{$i * 5}{ &>* >*:first-child{ padding-right:$i * 5px; } }
  }

  @for $i from 1 through 10{
    &%vsep-#{$i * 5}{ &>* >*{ padding-top:$i * 5px; }
      &>*:first-child >*{ padding-top:initial; }
    }
  }
}


/* ----------------------------------- *
 * Hbox
 * ----------------------------------- */
%Hbox{ @include flexbox();
  /* ----------------------------------- *
   * Hbox: Flex ratios from 1 -> 12
   * ----------------------------------- */
  @for $i from 1 through 12{
    %Hbox-flex#{$i}{ @include flex($i); display:block;}
  }
}

/* ----------------------------------- *
 * Hbox: adjustment classes
 * ----------------------------------- */
%Hbox-vcenter{ @include align-items(center); }
%Hbox-vtop{ @include align-items(start); }
%Hbox-hcenter{ @include justify-content(center); }
%Hbox-right{ margin-left:auto !important; } // pushes the element to the right - simulates float:right in side flexbox

/* ----------------------------------- *
 * Hbox: Outer Separation
 * ----------------------------------- */
@for $i from 1 through 10{
  %Hbox-outer-sep#{$i * 5}{ &>*{ margin-left: $i * 5px; &:first-child{margin-left: 0;} } }
  %Hbox-inner-sep#{$i * 5}{ &>*{ padding-right: $i * 5px; &:last-child{padding-right: 0;} } }
}

/* ----------------------------------- *
 * Legacy Hbox, uses floats, clears with overflow hidden
 * ----------------------------------- */
%Hbox-simple{
  &>*{ float:left; overflow: hidden; box-sizing: border-box;
    &%Hbox-right{ float: right;} // override the float left if explicitly set to float right

    @for $i from 1 through 20{
      &>%Hbox-#{$i * 5}{ width: $i * 5%; display:block;}
    }
  }
}

/* ----------------------------------- *
 * Vbox%
 * Applies vertical spacing to children%
 * Can be either inner(padding)
 * or outer(margin)
 * ----------------------------------- */
%Vbox:first-child{ padding-top:0; margin-top:0; }
@for $i from 1 through 10{
  %Vbox-outer-sep#{$i * 5}{ &>*{ margin-top: $i * 5px; } &:first-child{margin-top:initial;}}
  %Vbox-inner-sep#{$i * 5}{ &>*{ padding-top: $i * 5px; } &:first-child{padding-top:initial;}}
}

/* ----------------------------------- *
 * Box%
 * Main container% Limits width%
 * Handle indentation
 * Concept of single and container%
 * A single box defines indentation, width
 * A container applies the Box indentation to 
 * all sub items%
 * ----------------------------------- */

%Box-center{ margin-left: auto; margin-right: auto; }
%Box-hfull{ height:100%; }
%Box-wfull{ width:100%; }
@for $i from 1 through 20{
  %Box-w#{$i * 60}{ max-width:$i * 60px; width:100%; }
  %Box-h#{$i * 60}{ min-height:$i * 60px; }
}
@for $i from 1 through 10{
  %Box-inner-top#{$i * 5}{  padding-top: $i * 5px; }
  %Box-inner-bottom#{$i * 5}{  padding-bottom: $i * 5px; }
  %Box-inner-right#{$i * 5}{  padding-right: $i * 5px; }
  %Box-inner-left#{$i * 5}{  padding-left: $i * 5px; }
  %Box-inner-h#{$i * 5}{  padding-left: $i * 5px; padding-right: $i * 5px; }
  %Box-inner-v#{$i * 5}{  padding-top: $i * 5px; padding-bottom: $i * 5px; }
  %Box-inner#{$i * 5}{  padding: $i * 5px; }
  %Box-outer-top#{$i * 5}{  margin-top: $i * 5px; }
  %Box-outer-bottom#{$i * 5}{  margin-bottom: $i * 5px; }
  %Box-outer-right#{$i * 5}{  margin-right: $i * 5px; }
  %Box-outer-left#{$i * 5}{  margin-left: $i * 5px; }
  %Box-outer-h#{$i * 5}{  margin-left: $i * 5px; margin-right: $i * 5px; }
  %Box-outer-v#{$i * 5}{  margin-top: $i * 5px; margin-bottom: $i * 5px; }
  %Box-outer#{$i * 5}{  margin: $i * 5px; }
}


/* ----------------------------------- *
 * BoxContainer%
 * Apples the same kind of box logic
 * as above but does it to all it's
 * children%
 * ----------------------------------- */
@for $i from 1 through 10{
  %BoxContainer-inner-top#{$i * 5}{ &>*{ padding-top: $i * 5px; }  }
  %BoxContainer-inner-bottom#{$i * 5}{ &>*{ padding-bottom: $i * 5px; }  }
  %BoxContainer-inner-right#{$i * 5}{ &>*{ padding-right: $i * 5px; }  }
  %BoxContainer-inner-left#{$i * 5}{ &>*{ padding-left: $i * 5px; }  }
  %BoxContainer-inner-h#{$i * 5}{ &>*{ padding-left: $i * 5px; padding-right: $i * 5px; } }
  %BoxContainer-inner-v#{$i * 5}{ &>*{ padding-top: $i * 5px; padding-bottom: $i * 5px; } }
  %BoxContainer-inner#{$i * 5}{ &>*{ padding-top: $i * 5px; padding-bottom: $i * 5px; } }
  %BoxContainer-outer-top#{$i * 5}{ &>*{ margin-top: $i * 5px; }  }
  %BoxContainer-outer-bottom#{$i * 5}{ &>*{ margin-bottom: $i * 5px; }  }
  %BoxContainer-outer-right#{$i * 5}{ &>*{ margin-right: $i * 5px; }  }
  %BoxContainer-outer-left#{$i * 5}{ &>*{ margin-left: $i * 5px; }  }
  %BoxContainer-outer-h#{$i * 5}{ &>*{ margin-left: $i * 5px; margin-right: $i * 5px; } }
  %BoxContainer-outer-v#{$i * 5}{ &>*{ margin-top: $i * 5px; margin-bottom: $i * 5px; } }
  %BoxContainer-outer#{$i * 5}{ &>*{ margin-top: $i * 5px; margin-bottom: $i * 5px; } }
}


/* ----------------------------------- *
 * Helper Classes
 * ----------------------------------- */
%L-fr{ float:right; }
%L-fl{ float:left; }
%L-center{ text-align: center; }

/* ----------------------------------- *
 * Helper Containers
 * ----------------------------------- */

/* ----------------------------------- *
 * Table Cell Container
 * Another way to to horizontal layout
 * has it's own quirks
 * ----------------------------------- */
%L-tc-container{ &>*{ display:table-cell; } }

/* ----------------------------------- *
 * Inline block container
 * Yet another way to acheive horiztontal
 * layout
 * ----------------------------------- */
%L-ib-container{
  &%vcenter{ vertical-align: middle; }
  &>*{ display:inline-block; }
}


/**
 * Grid layout
 */
%Grid{ overflow: hidden;
  &>*{ float:left; box-sizing: border-box; display:block;}
  @for $i from 1 through 10 {
    &%Grid-col#{$i}{
      @for $k from 0 through $i {
        &>*:nth-child(#{$k}){ padding-top:0; }
      }
      &>*:nth-child( #{$i}n ){ padding-right:0; }
      &>*:nth-child(#{$i}n+1){ padding-left:0; }
      &>*{ width: (100% / $i);  }
    }
    &%Grid-sep#{$i * 5} {
      &>*{
        padding: $i * 5px;
      }
    }
  }
}